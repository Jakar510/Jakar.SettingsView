<?xml version = "1.0"
	  encoding = "UTF-8" ?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
			 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:l="clr-namespace:AiForms.Layouts;assembly=AiForms.Layouts"
			 xmlns:ef="clr-namespace:AiForms.Effects;assembly=AiForms.Effects"
			 xmlns:me="clr-namespace:Sample.Views;assembly=SettingsSample"
			 xmlns:settingsView="clr-namespace:Jakar.SettingsView.Shared;assembly=Jakar.SettingsView"
			 xmlns:cells="clr-namespace:Jakar.SettingsView.Shared.Cells;assembly=Jakar.SettingsView"
			 xmlns:sv="clr-namespace:Jakar.SettingsView.Shared.sv;assembly=Jakar.SettingsView"
			 xmlns:config="clr-namespace:Jakar.SettingsView.Shared.Config;assembly=Jakar.SettingsView"
			 x:Class="Sample.Views.LabelCellTest">
	<ContentPage.Resources>
		<ResourceDictionary>
			<Style TargetType="Label">
				<Setter Property="FontSize"
						Value="11" />
			</Style>
		</ResourceDictionary>
	</ContentPage.Resources>
	<StackLayout>
		<ScrollView VerticalOptions="Start"
					HeightRequest="100"
					BackgroundColor="#FFFFFF">
			<l:WrapLayout Spacing="4">
				<Label Text="Number"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="MaxMinChange"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="PopupTitle"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="Time"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="TimeFormat"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="Date"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="DateFormat"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="MinMaxDateChange"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="TodayText"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="CanExecute"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="Command"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="CommandParameter"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="KeepSelected"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="TextItems"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="TextSelectedItem"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />

			</l:WrapLayout>
		</ScrollView>
		<ScrollView VerticalOptions="Start"
					HeightRequest="100"
					BackgroundColor="#efefef">
			<me:CellController />
		</ScrollView>
		<ScrollView VerticalOptions="Start"
					HeightRequest="100">
			<me:ParentController />
		</ScrollView>

		<sv:SettingsView BackgroundColor="{Binding BackgroundColor.Value}"
						 SeparatorColor="{Binding SeparatorColor.Value}"
						 SelectedColor="{Binding SelectedColor.Value}"
						 HeaderPadding="{Binding HeaderPadding.Value}"
						 HeaderTextColor="{Binding HeaderTextColor.Value}"
						 HeaderFontSize="{Binding HeaderFontSize.Value}"
						 HeaderTextVerticalAlign="{Binding HeaderTextVerticalAlign.Value}"
						 HeaderBackgroundColor="{Binding HeaderBackgroundColor.Value}"
						 HeaderHeight="{Binding HeaderHeight.Value}"
						 FooterTextColor="{Binding FooterTextColor.Value}"
						 FooterFontSize="{Binding FooterFontSize.Value}"
						 FooterBackgroundColor="{Binding FooterBackgroundColor.Value}"
						 FooterPadding="{Binding FooterPadding.Value}"
						 RowHeight="{Binding RowHeight.Value}"
						 HasUnevenRows="{Binding HasUnevenRows.Value}"
						 CellTitleColor="{Binding CellTitleColor.Value}"
						 CellTitleFontSize="{Binding CellTitleFontSize.Value}"
						 CellValueTextColor="{Binding CellValueTextColor.Value}"
						 CellValueTextFontSize="{Binding CellValueTextFontSize.Value}"
						 CellDescriptionColor="{Binding CellDescriptionColor.Value}"
						 CellDescriptionFontSize="{Binding CellDescriptionFontSize.Value}"
						 CellBackgroundColor="{Binding CellBackgroundColor.Value}"
						 CellIconSize="{Binding CellIconSize.Value}"
						 CellIconRadius="{Binding CellIconRadius.Value}"
						 CellAccentColor="{Binding CellAccentColor.Value}"
						 CellHintTextColor="{Binding CellHintTextColor.Value}"
						 CellHintFontSize="{Binding CellHintFontSize.Value}"
						 UseDescriptionAsValue="{Binding UseDescriptionAsValue.Value}"
						 ShowSectionTopBottomBorder="{Binding ShowSectionTopBottomBorder.Value}">
			<sv:Section Title="Section1"
						FooterText="Footer1">
				<cells:LabelCell IsEnabled="{Binding IsEnabled.Value}"
								 IconSource="{Binding IconSource.Value}"
								 Title="{Binding Title.Value}"
								 Description="{Binding Description.Value}"
								 Hint="{Binding HintText.Value}"
								 BackgroundColor="{Binding BgColor.Value}"
								 TitleColor="{Binding TitleColor.Value}"
								 TitleFontSize="{Binding TitleFontSize.Value}"
								 ValueTextColor="{Binding ValueTextColor.Value}"
								 ValueTextFontSize="{Binding ValueTextFontSize.Value}"
								 DescriptionColor="{Binding DescriptionColor.Value}"
								 DescriptionFontSize="{Binding DescriptionFontSize.Value}"
								 HintColor="{Binding HintTextColor.Value}"
								 HintFontSize="{Binding HintFontSize.Value}"
								 IconSize="{Binding IconSize.Value}"
								 IconRadius="{Binding IconRadius.Value}"
								 Tapped="Handle_Tapped"
								 ValueText="{Binding ValueText.Value}" />
				<cells:CommandCell IsEnabled="{Binding IsEnabled.Value}"
								   IconSource="{Binding IconSource.Value}"
								   Title="{Binding Title.Value}"
								   Description="{Binding Description.Value}"
								   BackgroundColor="{Binding BgColor.Value}"
								   TitleColor="{Binding TitleColor.Value}"
								   TitleFontSize="{Binding TitleFontSize.Value}"
								   DescriptionColor="{Binding DescriptionColor.Value}"
								   DescriptionFontSize="{Binding DescriptionFontSize.Value}"
								   IconSize="{Binding IconSize.Value}"
								   IconRadius="{Binding IconRadius.Value}"
								   Tapped="Handle_Tapped"
								   Command="{Binding Command.Value}"
								   CommandParameter="{Binding CommandParameter.Value}"
								   KeepSelectedUntilBack="{Binding KeepSelected.Value}" />
				<cells:NumberPickerCell IsEnabled="{Binding IsEnabled.Value}"
										IconSource="{Binding IconSource.Value}"
										Title="{Binding Title.Value}"
										Description="{Binding Description.Value}"
										Hint="{Binding HintText.Value}"
										BackgroundColor="{Binding BgColor.Value}"
										TitleColor="{Binding TitleColor.Value}"
										TitleFontSize="{Binding TitleFontSize.Value}"
										DescriptionColor="{Binding DescriptionColor.Value}"
										DescriptionFontSize="{Binding DescriptionFontSize.Value}"
										HintColor="{Binding HintTextColor.Value}"
										HintFontSize="{Binding HintFontSize.Value}"
										IconSize="{Binding IconSize.Value}"
										IconRadius="{Binding IconRadius.Value}"
										Tapped="Handle_Tapped"
										Number="{Binding Number.Value}"
										Max="{Binding MaxNum.Value}"
										Min="{Binding MinNum.Value}"
										SelectedCommand="{Binding NumberSelectedCommand}">
					<cells:NumberPickerCell.Prompt>
						<config:PopupConfig Title="{Binding PopupTitle.Value}" />
					</cells:NumberPickerCell.Prompt>
				</cells:NumberPickerCell>
				<cells:TimePickerCell IsEnabled="{Binding IsEnabled.Value}"
									  IconSource="{Binding IconSource.Value}"
									  Title="{Binding Title.Value}"
									  Description="{Binding Description.Value}"
									  Hint="{Binding HintText.Value}"
									  BackgroundColor="{Binding BgColor.Value}"
									  TitleColor="{Binding TitleColor.Value}"
									  TitleFontSize="{Binding TitleFontSize.Value}"
									  DescriptionColor="{Binding DescriptionColor.Value}"
									  DescriptionFontSize="{Binding DescriptionFontSize.Value}"
									  HintColor="{Binding HintTextColor.Value}"
									  HintFontSize="{Binding HintFontSize.Value}"
									  IconSize="{Binding IconSize.Value}"
									  IconRadius="{Binding IconRadius.Value}"
									  Tapped="Handle_Tapped"
									  Time="{Binding Time.Value}"
									  Format="{Binding TimeFormat.Value}" >
					<cells:TimePickerCell.Prompt>
						<config:PopupConfig Title="{Binding PopupTitle.Value}" />
					</cells:TimePickerCell.Prompt>
				</cells:TimePickerCell>
				<cells:DatePickerCell IsEnabled="{Binding IsEnabled.Value}"
									  IconSource="{Binding IconSource.Value}"
									  Title="{Binding Title.Value}"
									  Description="{Binding Description.Value}"
									  Hint="{Binding HintText.Value}"
									  BackgroundColor="{Binding BgColor.Value}"
									  TitleColor="{Binding TitleColor.Value}"
									  TitleFontSize="{Binding TitleFontSize.Value}"
									  DescriptionColor="{Binding DescriptionColor.Value}"
									  DescriptionFontSize="{Binding DescriptionFontSize.Value}"
									  HintColor="{Binding HintTextColor.Value}"
									  HintFontSize="{Binding HintFontSize.Value}"
									  IconSize="{Binding IconSize.Value}"
									  IconRadius="{Binding IconRadius.Value}"
									  Tapped="Handle_Tapped"
									  Date="{Binding Date.Value}"
									  Format="{Binding DateFormat.Value}"
									  MaximumDate="{Binding MaxDate.Value}"
									  MinimumDate="{Binding MinDate.Value}"
									  TodayText="{Binding TodayText.Value}" />
				<cells:TextPickerCell IsEnabled="{Binding IsEnabled.Value}"
									  IconSource="{Binding IconSource.Value}"
									  Title="{Binding Title.Value}"
									  Description="{Binding Description.Value}"
									  Hint="{Binding HintText.Value}"
									  BackgroundColor="{Binding BgColor.Value}"
									  TitleColor="{Binding TitleColor.Value}"
									  TitleFontSize="{Binding TitleFontSize.Value}"
									  ValueTextColor="{Binding ValueTextColor.Value}"
									  ValueTextFontSize="{Binding ValueTextFontSize.Value}"
									  DescriptionColor="{Binding DescriptionColor.Value}"
									  DescriptionFontSize="{Binding DescriptionFontSize.Value}"
									  HintColor="{Binding HintTextColor.Value}"
									  HintFontSize="{Binding HintFontSize.Value}"
									  IconSize="{Binding IconSize.Value}"
									  IconRadius="{Binding IconRadius.Value}"
									  Tapped="Handle_Tapped"
									  Items="{Binding TextItems.Value}"
									  SelectedItem="{Binding TextSelectedItem.Value}"
									  SelectedCommand="{Binding TextSelectedCommand}" >
					<cells:TextPickerCell.Prompt>
						<config:PopupConfig Title="{Binding PopupTitle.Value}" />
					</cells:TextPickerCell.Prompt>
				</cells:TextPickerCell>
			</sv:Section>
		</sv:SettingsView>
	</StackLayout>
</ContentPage>
