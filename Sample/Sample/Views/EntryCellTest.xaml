<?xml version = "1.0"
	  encoding = "UTF-8" ?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
			 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:l="clr-namespace:AiForms.Layouts;assembly=AiForms.Layouts"
			 xmlns:ef="clr-namespace:AiForms.Effects;assembly=AiForms.Effects"
			 xmlns:me="clr-namespace:Jakar.SettingsView.Sample.Shared.Views;assembly=SettingsSample"
             xmlns:cells="clr-namespace:Jakar.SettingsView.Shared.Cells;assembly=Jakar.SettingsView"
			 xmlns:sv="clr-namespace:Jakar.SettingsView.Shared.sv;assembly=Jakar.SettingsView"
			 xmlns:views = "clr-namespace:Jakar.SettingsView.Sample.Shared.Views;assembly=Jakar.SettingsView.Sample.Shared"
			 x:Class="Jakar.SettingsView.Sample.Shared.Views.EntryCellTest">

	<ContentPage.Resources>
		<ResourceDictionary>
			<Style TargetType="Label">
				<Setter Property="FontSize"
						Value="11" />
			</Style>
		</ResourceDictionary>
	</ContentPage.Resources>

	<StackLayout>
		<ScrollView VerticalOptions="Start"
					HeightRequest="100"
					BackgroundColor="#FFFFFF">
			<l:WrapLayout Spacing="4">
				<Label Text="OwnAccentColor"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="MaxLength"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="KeyboardType"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="Placeholder"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="InputText"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="TextAlignment"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
				<Label Text="IsPassword"
					   ef:AddCommand.On="true"
					   ef:AddCommand.Command="{Binding CellChangeCommand}"
					   ef:AddCommand.EffectColor="#80FFFF00" />
			</l:WrapLayout>
		</ScrollView>
		<ScrollView VerticalOptions="Start"
					HeightRequest="100"
					BackgroundColor="#efefef">
			<views:CellController />
		</ScrollView>
		<ScrollView VerticalOptions="Start"
					HeightRequest="100">
			<views:ParentController />
		</ScrollView>

		<sv:SettingsView BackgroundColor="{Binding BackgroundColor.Value}"
								   SeparatorColor="{Binding SeparatorColor.Value}"
								   SelectedColor="{Binding SelectedColor.Value}"
								   HeaderPadding="{Binding HeaderPadding.Value}"
								   HeaderTextColor="{Binding HeaderTextColor.Value}"
								   HeaderFontSize="{Binding HeaderFontSize.Value}"
								   HeaderBackgroundColor="{Binding HeaderBackgroundColor.Value}"
								   HeaderHeight="{Binding HeaderHeight.Value}"
								   FooterTextColor="{Binding FooterTextColor.Value}"
								   FooterFontSize="{Binding FooterFontSize.Value}"
								   FooterBackgroundColor="{Binding FooterBackgroundColor.Value}"
								   FooterPadding="{Binding FooterPadding.Value}"
								   RowHeight="{Binding RowHeight.Value}"
								   HasUnevenRows="{Binding HasUnevenRows.Value}"
								   CellTitleColor="{Binding CellTitleColor.Value}"
								   CellTitleFontSize="{Binding CellTitleFontSize.Value}"
								   CellValueTextColor="{Binding CellValueTextColor.Value}"
								   CellValueTextFontSize="{Binding CellValueTextFontSize.Value}"
								   CellDescriptionColor="{Binding CellDescriptionColor.Value}"
								   CellDescriptionFontSize="{Binding CellDescriptionFontSize.Value}"
								   CellBackgroundColor="{Binding CellBackgroundColor.Value}"
								   CellIconSize="{Binding CellIconSize.Value}"
								   CellIconRadius="{Binding CellIconRadius.Value}"
								   CellAccentColor="{Binding CellAccentColor.Value}"
								   CellHintTextColor="{Binding CellHintTextColor.Value}"
								   CellHintFontSize="{Binding CellHintFontSize.Value}"
								   UseDescriptionAsValue="{Binding UseDescriptionAsValue.Value}"
								   ShowSectionTopBottomBorder="{Binding ShowSectionTopBottomBorder.Value}">
			<sv:Section Title="Section1"
								  FooterText="Footer1">
				<cells:EntryCell x:Name="entryCell"
								 IsEnabled="{Binding IsEnabled.Value}"
								 IconSource="{Binding IconSource.Value}"
								 Title="{Binding Title.Value}"
								 Description="{Binding Description.Value}"
								 Hint="{Binding HintText.Value}"
								 BackgroundColor="{Binding BgColor.Value}"
								 TitleColor="{Binding TitleColor.Value}"
								 TitleFontSize="{Binding TitleFontSize.Value}"
								 ValueTextColor="{Binding ValueTextColor.Value}"
								 ValueTextFontSize="{Binding ValueTextFontSize.Value}"
								 DescriptionColor="{Binding DescriptionColor.Value}"
								 DescriptionFontSize="{Binding DescriptionFontSize.Value}"
								 HintColor="{Binding HintTextColor.Value}"
								 HintFontSize="{Binding HintFontSize.Value}"
								 IconSize="{Binding IconSize.Value}"
								 IconRadius="{Binding IconRadius.Value}"
								 Tapped="Handle_Tapped"
								 AccentColor="{Binding OwnAccentColor.Value}"
								 ValueText="{Binding InputText.Value}"
								 MaxLength="{Binding MaxLength.Value}"
								 Keyboard="{Binding KeyboardType.Value}"
								 Completed="Handle_Completed"
								 Placeholder="{Binding Placeholder.Value}"
								 ValueTextAlignment="{Binding TextAlignment.Value}"
								 IsPassword="{Binding IsPassword.Value}"
								 CompletedCommand="{Binding CompletedCommand}" />
				<EntryCell Text="{Binding InputText.Value}"
						   Label="DefaultEntry" />
				<cells:NumberPickerCell Min="1"
										Max="10"
										Number="5" />
				<cells:ButtonCell Title="SetFocus"
								  Tapped="Button_Tapped" />
			</sv:Section>
		</sv:SettingsView>
	</StackLayout>
</ContentPage>
